var scriptTags = document.getElementsByTagName('script');
var token = null;
var tokenRegex = /var token = '([A-F0-9]+)';/;
for (var i = 0; i < scriptTags.length; i++) {
	var scriptContent = scriptTags[i].textContent || scriptTags[i].innerHTML;
	var match = tokenRegex.exec(scriptContent);
	if (match) {
		token = match[1];
		break;
	}
}
var ver_token = document.querySelector("input[name='__RequestVerificationToken']").value;
var form_date = "12/30/2023";

let keyValuePairs = [];


keyValuePairs.push(['ENToken', token]);

keyValuePairs.push(['FromDate', '01/25/2024']);
keyValuePairs.push(['ToDate', '01/30/2024']);
keyValuePairs.push(['OrderBy', '1']);
keyValuePairs.push(['IncludedFields', 'Employee Status,Terminated On,Termination Date,Termination Reason']);
keyValuePairs.push(['selectAll', 'on']);

keyValuePairs.push(['__RequestVerificationToken', ver_token]);


console.log(keyValuePairs.map(pair => pair.join(': ')).join('\n'));

function delay(n) {
	return new Promise(function(resolve) {
		setTimeout(resolve, n * 1000);
	});
}

async function get_client_id_list(keyValuePairs) {
	await delay(5);
	var fetch_url = 'https://' + document.domain + '/benefits/Company/Reports/GenerateEmployeeDemographicsCsv';
	console.log(token);
	try {
		const params = new URLSearchParams(keyValuePairs);

		const response = await fetch(fetch_url, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/x-www-form-urlencoded',
				'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
			},
			body: params
		});
		const responseData = await response.text();
		return responseData;
	} catch (error) {
		console.error('Error:', error);
	}
}

// Using the async function correctly
async function logClientIDList() {
	var clientIDList = await get_client_id_list(keyValuePairs);
	console.log(clientIDList);
}

logClientIDList();
