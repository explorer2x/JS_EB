if (document.domain == 'my.unum.com') { function input_refresh_react(tgt_el_name, val) { var evs = ['input', 'change', 'blur']; tgt_elg = document.querySelector('[name="' + tgt_el_name + '"]'); if (!tgt_elg) { return; } var ev = new Event('focusin', { bubbles: true }); ev.simulated = true; tgt_elg.dispatchEvent(ev); tgt_elg.value = val; for (var i = 0; i < evs.length; i++) { var ev = new Event(evs[i], { bubbles: true }); ev.simulated = true; tgt_elg.dispatchEvent(ev); } }; function reivse_date(dateString) { const date = new Date(dateString); const formattedDate = date.toLocaleDateString('en-US', { month: 'numeric', day: 'numeric', year: 'numeric' }); return (formattedDate); } if (document.body.innerText.includes("Enroll an Employee")) { input_refresh_react('ssnNumberId', jsonObject.ee_BASIC_info.SSN); } if (document.body.innerText.includes("Add your employee's details")) { const dic = { "SSN": "ssn", "LAST_NAME": "last_name", "FIRST_NAME": "first_name", "MIDDLE_NAME": "middle_name", "DOB": "date", "ADD1": "Add_l1", "ADD2": "Add_l2", "ADDCITY": "city", "ADDZIP": "zip", "PERSONAL_EMAIL": "email", }; for (var keyv in dic) { var itemv = dic[keyv]; if (itemv != '') { if (itemv == "date") { g_dob = jsonObject.ee_BASIC_info[keyv]; input_refresh_react(itemv, reivse_date(g_dob)); } else { input_refresh_react(itemv, jsonObject.ee_BASIC_info[keyv]); }; }; }; var state_v = get_short_state(jsonObject.ee_BASIC_info['ADDSTATE']); if (state_v) { input_refresh_react('state', state_v); }; var sex_v = jsonObject.ee_BASIC_info['GENDER']; if (sex_v == 'F' || sex_v == 'Female') { sex_v = 'Female' } else if (sex_v == 'M' || sex_v == 'Male') { sex_v = 'Male' }; input_refresh_react('gender', sex_v); } if (document.body.innerText.includes("employment status")) { var evs = ['input', 'change', 'blur']; var tgt_elg = document.querySelector('[class="slds-input"]'); var g_doh = jsonObject.ee_BASIC_info['DATE_OF_HIRE']; var ev = new Event('fucusin', { bubbles: true }); ev.simulated = true; tgt_elg.dispatchEvent(ev); tgt_elg.value = reivse_date(g_doh); for (var i = 0; i < evs.length; i++) { var ev = new Event(evs[i], { bubbles: true }); ev.simulated = true; tgt_elg.dispatchEvent(ev); } } if (document.body.innerText.includes("Provide earnings information")) { function delay(n) { return new Promise(function(resolve) { setTimeout(resolve, n * 50); }); } async function enter_earnings() { var earn_type = jsonObject.ee_BASIC_info.PAY_PERIOD; if (earn_type == 'A') { input_refresh_react('EarningsType', 'Annual'); await delay(1); console.log(321); input_refresh_react('Earnings', jsonObject.ee_BASIC_info.ANNUAL_SALARY); } else if (earn_type == 'H') { input_refresh_react('EarningsType', 'Hourly'); await delay(1); input_refresh_react('Earnings', jsonObject.ee_BASIC_info.HOURLY_SALARY); input_refresh_react('Hoursworked', jsonObject.ee_BASIC_info.HOUR_PER_WEEK); }; }; enter_earnings(); } };
