if (document.domain == "www3.mutualofomaha.com") { function input_refresh(tgt_el_name, val) { tgt_elg = document.querySelector('[name="' + tgt_el_name + '"]'); if (!tgt_elg) { return; } var ev = new Event('input', { bubbles: true }); ev.simulated = true; tgt_elg.value = val; tgt_elg.dispatchEvent(ev); } function selectValueFromDropDown(SelectedValue, ele_name) { const dropdown = document.querySelector(`div[name="${ele_name}"]`); if (!dropdown) { return; } const options = dropdown.querySelectorAll('.item'); let fOption; for (let i = 0; i < options.length; i++) { if (options[i].textContent === SelectedValue) { fOption = options[i]; break; } } fOption.click(); } function getFormattedDate(date) { var dateO = new Date(date); let year = dateO.getFullYear(); let month = (1 + dateO.getMonth()).toString().padStart(2, '0'); let day = dateO.getDate().toString().padStart(2, '0'); return month + '/' + day + '/' + year; }; function getStateName(stateAbbreviation) { const states = { AL: "Alabama", AK: "Alaska", AZ: "Arizona", AR: "Arkansas", CA: "California", CO: "Colorado", CT: "Connecticut", DE: "Delaware", FL: "Florida", GA: "Georgia", HI: "Hawaii", ID: "Idaho", IL: "Illinois", IN: "Indiana", IA: "Iowa", KS: "Kansas", KY: "Kentucky", LA: "Louisiana", ME: "Maine", MD: "Maryland", MA: "Massachusetts", MI: "Michigan", MN: "Minnesota", MS: "Mississippi", MO: "Missouri", MT: "Montana", NE: "Nebraska", NV: "Nevada", NH: "New Hampshire", NJ: "New Jersey", NM: "New Mexico", NY: "New York", NC: "North Carolina", ND: "North Dakota", OH: "Ohio", OK: "Oklahoma", OR: "Oregon", PA: "Pennsylvania", RI: "Rhode Island", SC: "South Carolina", SD: "South Dakota", TN: "Tennessee", TX: "Texas", UT: "Utah", VT: "Vermont", VA: "Virginia", WA: "Washington", WV: "West Virginia", WI: "Wisconsin", WY: "Wyoming", }; return states[stateAbbreviation]; } function input_dep(Relationship, Relationship2, idx) { for (var i = 1; i < 100; i++) { var testValue = document.getElementsByName(`newDependents.new${Relationship2}.new${Relationship}-${i}.demographic.firstName`); if (testValue.length > 0) { if (testValue[0].value == '') { const sdic = { "FIRST_NAME": "newDependents.new" + Relationship2 + ".new" + Relationship + "-" + i + ".demographic.firstName", "MIDDLE_NAME": "newDependents.new" + Relationship2 + ".new" + Relationship + "-" + i + ".demographic.middleName", "LAST_NAME": "newDependents.new" + Relationship2 + ".new" + Relationship + "-" + i + ".demographic.lastName", "DOB": "newDependents.new" + Relationship2 + ".new" + Relationship + "-" + i + ".demographic.birthDate", "GENDER": "newDependents.new" + Relationship2 + ".new" + Relationship + "-" + i + ".demographic.gender" }; for (var key in sdic) { if (typeof(idx) == 'string') { jsonValue = jsonObject.ee_DEPT_info[Relationship][key]; } else { jsonValue = jsonObject.ee_DEPT_info[Relationship][key].split('|')[idx]; } itemV = sdic[key]; if (jsonObject.ee_DEPT_info[Relationship][key] != '') { if (key == 'GENDER') { if (jsonValue == 'M' || jsonValue == 'Male') { selectValueFromDropDown('Male', itemV); } else { selectValueFromDropDown('Female', itemV); } } else if (key == 'DOB') { input_refresh(itemV, getFormattedDate(jsonValue)); } else { input_refresh(itemV, jsonValue); } } } break; } } } } const dic = { "SSN": "demographic.ssn", "FIRST_NAME": "demographic.firstName", "MIDDLE_NAME": "demographic.middleName", "LAST_NAME": "demographic.lastName", "GENDER": "demographic.gender", "DOB": "demographic.birthDate", "ANNUAL_SALARY": "salaries.Basic.amount", "ADD1": "demographic.address.street1", "ADD2": "demographic.address.street2", "ADDCITY": "demographic.address.city", "ADDCOUNTY": "demographic.address.country", "ADDSTATE": "demographic.address.state", "ADDZIP": "demographic.address.zip", "HOUR_PER_WEEK": "employment.hoursWorked" }; for (var key in dic) { itemV = dic[key]; if (jsonObject.ee_BASIC_info[key] != '') { if (key == 'GENDER') { var gValue = jsonObject.ee_BASIC_info[key]; if (gValue == 'M' || gValue == 'Male') { selectValueFromDropDown('Male', itemV); } else { selectValueFromDropDown('Female', itemV); } } else if (key == 'DOB') { var dobValue = jsonObject.ee_BASIC_info[key]; input_refresh(itemV, getFormattedDate(dobValue)); } else if (key == 'ANNUAL_SALARY') { input_refresh(itemV, jsonObject.ee_BASIC_info[key]); selectValueFromDropDown('Annual', 'salaries.Basic.frequency'); } else if (key == 'ADDCOUNTY') { var conntryvalue = jsonObject.ee_BASIC_info[key]; if (conntryvalue == 'US' || conntryvalue == 'United States') { selectValueFromDropDown('United States', itemV); } else { selectValueFromDropDown('Canada', itemV); } } else if (key == 'ADDSTATE') { var stateValue = jsonObject.ee_BASIC_info[key]; selectValueFromDropDown(getStateName(stateValue), itemV); } else { input_refresh(itemV, jsonObject.ee_BASIC_info[key]); } } else if (jsonObject.ee_BASIC_info[key] == '' && key == "ADDCOUNTY") { selectValueFromDropDown('United States', itemV); } } if (jsonObject.ee_DEPT_info.Spouse.FIRST_NAME != '') { var h3Elements = document.getElementsByTagName('h3'); for (var i = 0; i < h3Elements.length; i++) { if (h3Elements[i].innerHTML === 'Spouse') { var addSpouseelement = document.querySelector('a.hand'); if (addSpouseelement != null && addSpouseelement.innerText == '+ Add Spouse') { addSpouseelement.click(); } input_dep('Spouse', 'Spouse', 'a'); } } jsonObject.ee_DEPT_info.Spouse.is_entered = "T"; } if (jsonObject.ee_DEPT_info.Child['FIRST_NAME'] != '') { var h3Elements = document.getElementsByTagName('h3'); for (var i = 0; i < h3Elements.length; i++) { if (h3Elements[i].innerHTML === 'Children') { if (jsonObject.ee_DEPT_info.Child.FIRST_NAME.includes('|') == false) { const childElements = document.getElementsByClassName('hand'); for (var j = 0; j < childElements.length; j++) { if (childElements[j] != null && childElements[j].innerText == '+ Add Child') { childElements[j].click(); break; } } input_dep('Child', 'Children', 'a'); jsonObject.ee_DEPT_info.Child.is_entered = "T"; } else { child_ct = jsonObject.ee_DEPT_info.Child.FIRST_NAME.split("|").length; for (var x = 0; x < child_ct; x++) { const childElements = document.getElementsByClassName('hand'); for (var j = 0; j < childElements.length; j++) { if (childElements[j] != null && childElements[j].innerText == '+ Add Child') { childElements[j].click(); break; } } input_dep('Child', 'Children', x); if (X == 0) { jsonObject.ee_DEPT_info.Child.is_entered = "T"; } else { jsonObject.ee_DEPT_info.Child.is_entered = jsonObject.ee_DEPT_info.Child.is_entered + "|" + "T"; } } } } } } let newClipboardString = JSON.stringify(jsonObject); navigator.clipboard.writeText(newClipboardString); }
