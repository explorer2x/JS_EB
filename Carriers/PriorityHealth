if (document.domain == 'webenrollment.priorityhealth.com') { const dic = { 'SSN': 'ssn', 'dob_Month': 'date_of_birth_month', 'dob_Day': 'date_of_birth_day', 'dob_Year': 'date_of_birth_year', 'GENDER': 'gender', 'FIRST_NAME': 'first_name', 'LAST_NAME': 'last_name', 'MARITAL_STATUS': 'marital_status', 'ADD1': 'address_1', 'ADDCITY': 'city', 'ADDZIP': 'zip_code', 'ADDSTATE': 'state', 'HOMEPHONE': 'home_phone', 'WORKPHONE': 'work_phone', 'MIDDLE_NAME': 'middle' }; const dic_dependent = { 'dob_Month': 'date_of_birth_month', 'dob_Day': 'date_of_birth_day', 'dob_Year': 'date_of_birth_year', 'SSN': 'ssn', 'GENDER': 'gender', 'FIRST_NAME': 'first_name', 'LAST_NAME': 'last_name', 'RELATION': 'emp_relationship_id', 'MIDDLE_NAME': 'middle' }; if (document.getElementById("secondary-page-title").innerText == 'Add Employee') { if (jsonObject.ee_BASIC_info.DOB.includes(" ") == true) { var timeList = jsonObject.ee_BASIC_info.DOB.split(" ")[0].split("/"); } else { var timeList = jsonObject.ee_BASIC_info.DOB.split('/'); }; for (var keyv in dic) { var itemv = dic[keyv]; var el = document.getElementsByName(itemv)[0]; switch (keyv) { case 'dob_Month': console.log(parseInt(timeList[0])); el.value = parseInt(timeList[0]); break; case 'dob_Day': console.log(parseInt(timeList[1])); el.value = parseInt(timeList[1]); break; case 'dob_Year': console.log(parseInt(timeList[2])); el.value = parseInt(timeList[2]); break; case 'ADD1': if (jsonObject.ee_BASIC_info.ADD2 == "") { el.value = jsonObject.ee_BASIC_info[keyv]; } else { console.log(jsonObject.ee_BASIC_info[keyv] + ' ' + jsonObject.ee_BASIC_info.ADD2); el.value = jsonObject.ee_BASIC_info[keyv] + ' ' + jsonObject.ee_BASIC_info.ADD2; } break; case 'ADDSTATE': console.log(get_short_state(jsonObject.ee_BASIC_info[keyv])); el.value = get_short_state(jsonObject.ee_BASIC_info[keyv]); break; case 'MARITAL_STATUS': console.log(jsonObject.ee_BASIC_info[keyv]); if (jsonObject.ee_BASIC_info[keyv] == "Married" || jsonObject.ee_BASIC_info[keyv] == "M") { el.value = 'M'; } else if (jsonObject.ee_BASIC_info[keyv] == "Divorced" || jsonObject.ee_BASIC_info[keyv] == "D") { el.value = 'D'; } else if (jsonObject.ee_BASIC_info[keyv] == "Single" || jsonObject.ee_BASIC_info[keyv] == "S") { el.value = 'S'; } else if (jsonObject.ee_BASIC_info[keyv] == "Widowed" || jsonObject.ee_BASIC_info[keyv] == "W") { el.value = 'W'; }; break; case 'GENDER': console.log(jsonObject.ee_BASIC_info[keyv]); if (jsonObject.ee_BASIC_info[keyv] == "F" || jsonObject.ee_BASIC_info[keyv] == "Female") { el.value = 'F'; } else { el.value = 'M'; }; break; case 'HOMEPHONE': var phoneNumber = jsonObject.ee_BASIC_info.HOMEPHONE; if (/[^0-9]/.test(phoneNumber)) { phoneNumber = phoneNumber.replace(/\D/g, ""); }; el.value = phoneNumber; break; case 'WORKPHONE': var phoneNumber = jsonObject.ee_BASIC_info.WORKPHONE; if (/[^0-9]/.test(phoneNumber)) { phoneNumber = phoneNumber.replace(/\D/g, ""); }; el.value = phoneNumber; break; case 'MIDDLE_NAME': if (jsonObject.ee_BASIC_info.MIDDLE_NAME != '') { el.value = jsonObject.ee_BASIC_info.MIDDLE_NAME.charAt(0); }; break; default: console.log(jsonObject.ee_BASIC_info[keyv]); el.value = jsonObject.ee_BASIC_info[keyv]; }; }; } else if (document.getElementById("secondary-page-title").innerText == 'Add Dependent') { if (jsonObject.ee_DEPT_info.Spouse.FIRST_NAME != "" && jsonObject.ee_DEPT_info.Spouse.is_entered == "") { if (jsonObject.ee_DEPT_info.Spouse.DOB.includes(" ") == true) { var timeList = jsonObject.ee_DEPT_info.Spouse.DOB.split(" ")[0].split("/"); } else { var timeList = jsonObject.ee_DEPT_info.Spouse.DOB.split('/'); }; for (var keyv in dic_dependent) { var itemv = dic_dependent[keyv]; var el = document.getElementsByName(itemv)[0]; switch (keyv) { case 'GENDER': console.log(jsonObject.ee_DEPT_info.Spouse[keyv]); if (jsonObject.ee_DEPT_info.Spouse[keyv] == "F" || jsonObject.ee_DEPT_info.Spouse[keyv] == "Female") { el.value = 'F'; } else { el.value = 'M'; }; break; case 'dob_Month': console.log(parseInt(timeList[0])); el.value = parseInt(timeList[0]); break; case 'dob_Day': console.log(parseInt(timeList[1])); el.value = parseInt(timeList[1]); break; case 'dob_Year': console.log(parseInt(timeList[2])); el.value = parseInt(timeList[2]); break; case 'RELATION': console.log(jsonObject.ee_DEPT_info.Spouse[keyv]); if (jsonObject.ee_DEPT_info.Spouse[keyv] == "Spouse") { el.value = 'SPOU'; } else { el.value = 'DOMP'; }; break; case 'MIDDLE_NAME': if (jsonObject.ee_DEPT_info.Spouse.MIDDLE_NAME != '') { el.value = jsonObject.ee_DEPT_info.Spouse.MIDDLE_NAME.charAt(0); }; break; default: console.log(jsonObject.ee_DEPT_info.Spouse[keyv]); el.value = jsonObject.ee_DEPT_info.Spouse[keyv]; }; }; jsonObject.ee_DEPT_info.Spouse.is_entered = "T"; } else if (jsonObject.ee_DEPT_info.Child.FIRST_NAME != '') { if (jsonObject.ee_DEPT_info.Child.FIRST_NAME.includes('|') == false) { if (jsonObject.ee_DEPT_info.Child.DOB.includes(' ') == true) { var timeList = jsonObject.ee_DEPT_info.Child.DOB.split(' ')[0].split('/'); } else { var timeList = jsonObject.ee_DEPT_info.Child.DOB.split('/'); }; for (var keyv in dic_dependent) { var itemv = dic_dependent[keyv]; var el = document.getElementsByName(itemv)[0]; switch (keyv) { case 'GENDER': console.log(jsonObject.ee_DEPT_info.Child[keyv]); if (jsonObject.ee_DEPT_info.Child[keyv] == "F" || jsonObject.ee_DEPT_info.Child[keyv] == "Female") { el.value = 'F'; } else { el.value = 'M'; }; break; case 'dob_Month': console.log(parseInt(timeList[0])); el.value = parseInt(timeList[0]); break; case 'dob_Day': console.log(parseInt(timeList[1])); el.value = parseInt(timeList[1]); break; case 'dob_Year': console.log(parseInt(timeList[2])); el.value = parseInt(timeList[2]); break; case 'RELATION': console.log(jsonObject.ee_DEPT_info.Child[keyv]); el.value = 'CHLD'; break; case 'MIDDLE_NAME': if (jsonObject.ee_DEPT_info.Child.MIDDLE_NAME != '') { el.value = jsonObject.ee_DEPT_info.Child.MIDDLE_NAME.charAt(0); }; break; default: console.log(jsonObject.ee_DEPT_info.Child[keyv]); el.value = jsonObject.ee_DEPT_info.Child[keyv]; }; }; jsonObject.ee_DEPT_info.Child.is_entered = 'T'; } else { child_ct = jsonObject.ee_DEPT_info.Child.FIRST_NAME.split('|').length; if (jsonObject.ee_DEPT_info.Child.is_entered == '') { var child_entered_ct = 0; } else { child_entered_ct = jsonObject.ee_DEPT_info.Child.is_entered.split('|').length; }; console.log(child_ct); console.log(jsonObject.ee_DEPT_info.Child.is_entered); console.log(); if (child_entered_ct < child_ct) { console.log(jsonObject.ee_DEPT_info.Child.DOB); var timeList = jsonObject.ee_DEPT_info.Child.DOB.split("|")[child_entered_ct]; if (timeList.includes(' ') == true) { var timeList = timeList.split(' ')[0].split('/'); } else { var timeList = timeList.split('/'); }; console.log(timeList); for (var keyv in dic_dependent) { var itemv = dic_dependent[keyv]; var el = document.getElementsByName(itemv)[0]; switch (keyv) { case 'GENDER': console.log(jsonObject.ee_DEPT_info.Child[keyv].split("|")[child_entered_ct]); if (jsonObject.ee_DEPT_info.Child[keyv].split("|")[child_entered_ct] == "F" || jsonObject.ee_DEPT_info.Child[keyv].split("|")[child_entered_ct] == "Female") { el.value = 'F'; } else { el.value = 'M'; }; break; case 'dob_Month': console.log(parseInt(timeList[0])); el.value = parseInt(timeList[0]); break; case 'dob_Day': console.log(parseInt(timeList[1])); el.value = parseInt(timeList[1]); break; case 'dob_Year': console.log(parseInt(timeList[2])); el.value = parseInt(timeList[2]); break; case 'RELATION': el.value = 'CHLD'; break; case 'MIDDLE_NAME': if (jsonObject.ee_DEPT_info.Child.MIDDLE_NAME.split("|")[child_entered_ct] != '') { el.value = jsonObject.ee_DEPT_info.Child.MIDDLE_NAME.split("|")[child_entered_ct].charAt(0); }; break; default: console.log(jsonObject.ee_DEPT_info.Child[keyv].split("|")[child_entered_ct]); el.value = jsonObject.ee_DEPT_info.Child[keyv].split("|")[child_entered_ct]; }; }; if (child_entered_ct == 0) { jsonObject.ee_DEPT_info.Child.is_entered = "T"; } else { jsonObject.ee_DEPT_info.Child.is_entered = jsonObject.ee_DEPT_info.Child.is_entered + "|" + "T"; }; console.log(jsonObject.ee_DEPT_info.Child.is_entered); }; }; }; }; };
